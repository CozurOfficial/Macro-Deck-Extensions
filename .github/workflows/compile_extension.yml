name: Compile Extension

on:
  pull_request:
    branches: [ "main" ]

jobs:
  setup:
    name: "Setup"
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      repository-projects: write
    outputs:
      extension-path: ${{ steps.extract-extension-path.outputs.path }}
    
    steps:
    - uses: actions-ecosystem/action-remove-labels@v1.3.0
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        labels: |
          author-actions-required
          build-failed
          invalid-manifest
          moderator-review-required
          tests-failed

    - uses: actions-ecosystem/action-add-labels@v1.1.0
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        labels: in-process

    - name: Checkout
      uses: actions/checkout@v3.3.0
      
    - name: Extract extension path
      id: extract-extension-path
      env:
        GH_TOKEN: ${{ github.token }}
      run: |
        pr_paths=$(gh pr view ${{ github.event.pull_request.number }} --json files)
        files_count=$(jq '.files | length' <<< ${pr_paths})
        if [[ $files_count -gt 1 ]]
        then
            echo "Only one extension per pull-request is allowed!"
            exit 1
        elif [[ $files_count -eq 0 ]]
        then
            echo "No extension was found"
            exit 1
        fi
        echo "path=$(jq -r '.files[0].path' <<< ${pr_paths})" >> $GITHUB_OUTPUT
      
    - name: Check extension path
      run: echo "${{ steps.extract-extension-path.outputs.path }}"

  build:
    name: "Build"
    needs: [ setup ]
    permissions:
      contents: write
      pull-requests: write
      repository-projects: write
    runs-on: ubuntu-latest
    outputs:
      artifact-name: ${{ steps.build_extension.outputs.artifact-name }}
      artifact-path: ${{ steps.build_extension.outputs.artifact-path }}
      manifest: ${{ steps.build_extension.outputs.manifest }}
        
    steps:
    - name: Checkout
      uses: actions/checkout@v3.3.0
      
    - name: Init Submodule
      run: git submodule update --init --recursive ./${{ needs.setup.outputs.extension-path }}
      
    - name: Build Extension
      id: build_extension
      uses: Macro-Deck-App/Actions/build-extension@main
      with:
        extension-path: ${{ needs.setup.outputs.extension-path }}
        artifact-name: ${{ github.event.pull_request.number }}
    
    - uses: actions-ecosystem/action-remove-labels@v1.3.0
      with:
        labels: in-process

    - uses: actions-ecosystem/action-add-labels@v1.1.0
      if: failure() && steps.build_extension.outcome == 'failure'
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        labels: author-actions-required
    
    - uses: actions-ecosystem/action-add-labels@v1.1.0
      if: success()
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        labels: moderator-review-required